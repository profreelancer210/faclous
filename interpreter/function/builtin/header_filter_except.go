// Code generated by __generator__/interpreter.go at once

package builtin

import (
	"github.com/ysugimoto/falco/interpreter/context"
	"github.com/ysugimoto/falco/interpreter/function/errors"
	"github.com/ysugimoto/falco/interpreter/value"
)

const Header_filter_except_Name = "header.filter_except"

var Header_filter_except_ArgumentTypes = []value.Type{value.IdentType}

func Header_filter_except_Validate(args []value.Value) error {
	if len(args) != 2 {
		return errors.ArgumentNotEnough(Header_filter_except_Name, 2, args)
	}
	for i := range args {
		if args[i].Type() != Header_filter_except_ArgumentTypes[i] {
			return errors.TypeMismatch(Header_filter_except_Name, i+1, Header_filter_except_ArgumentTypes[i], args[i].Type())
		}
	}
	return nil
}

// Fastly built-in function implementation of header.filter_except
// Arguments may be:
// - ID, STRING_LIST
// Reference: https://developer.fastly.com/reference/vcl/functions/headers/header-filter-except/
func Header_filter_except(ctx *context.Context, args ...value.Value) (value.Value, error) {
	// Argument validations
	if err := Header_filter_except_Validate(args); err != nil {
		return value.Null, err
	}

	// Need to be implemented
	return value.Null, errors.NotImplemented("header.filter_except")
}
