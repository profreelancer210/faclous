// Code generated by __generator__/simulator.go; DO NOT EDIT.

package function

import (
	"fmt"

	"github.com/pkg/errors"
	"github.com/ysugimoto/falco/simulator/context"
	"github.com/ysugimoto/falco/simulator/types"
	"github.com/ysugimoto/falco/simulator/variable"
)

type Function struct {
	Scope types.Scope
	Call  func(ctx *context.Context, args ...variable.Value) (variable.Value, error)
}

func Exists(name string, scope types.Scope) (Function, error) {
	fn, ok := builtinFunctions[name]
	if !ok {
		return Function{}, errors.WithStack(fmt.Errorf("Function %s is not defined", name))
	} else if (fn.Scope & scope) == 0 {
		return Function{}, errors.WithStack(fmt.Errorf("Function %s could not call on %s scope", name, scope.String()))
	}
	return fn, nil
}

var builtinFunctions = map[string]Function{
	"accept.charset_lookup": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"accept.encoding_lookup": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"accept.language_filter_basic": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"accept.language_lookup": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"accept.media_lookup": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"addr.extract_bits": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"addr.is_ipv4": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"addr.is_ipv6": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"bin.base64_to_hex": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"bin.hex_to_base64": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"boltsort.sort": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"crypto.decrypt_base64": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"crypto.decrypt_hex": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"crypto.encrypt_base64": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"crypto.encrypt_hex": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"cstr_escape": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.awsv4_hmac": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.base64": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.base64_decode": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.base64url": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.base64url_decode": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.base64url_nopad": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.base64url_nopad_decode": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.hash_crc32": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.hash_crc32b": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.hash_md5": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.hash_sha1": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.hash_sha1_from_base64": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.hash_sha224": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.hash_sha256": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.hash_sha256_from_base64": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.hash_sha384": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.hash_sha512": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.hash_sha512_from_base64": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.hmac_md5": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.hmac_md5_base64": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.hmac_sha1": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.hmac_sha1_base64": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.hmac_sha256": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.hmac_sha256_base64": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.hmac_sha512": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.hmac_sha512_base64": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.rsa_verify": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.secure_is_equal": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.time_hmac_md5": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.time_hmac_sha1": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.time_hmac_sha256": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"digest.time_hmac_sha512": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"fastly.hash": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"h2.disable_header_compression": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"h2.push": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"h3.alt_svc": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"http_status_matches": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"json.escape": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.acos": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.acosh": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.asin": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.asinh": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.atan": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.atan2": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.atanh": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.ceil": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.cos": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.cosh": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.exp": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.exp2": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.floor": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.is_finite": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.is_infinite": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.is_nan": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.is_normal": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.is_subnormal": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.log": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.log10": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.log2": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.round": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.roundeven": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.roundhalfdown": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.roundhalfup": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.sin": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.sinh": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.sqrt": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.tan": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.tanh": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"math.trunc": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"parse_time_delta": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"querystring.add": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"querystring.clean": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"querystring.filter": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"querystring.filter_except": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"querystring.filtersep": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"querystring.get": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"querystring.globfilter": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"querystring.globfilter_except": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"querystring.regfilter": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"querystring.regfilter_except": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"querystring.remove": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"querystring.set": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"querystring.sort": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"randombool": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"randombool_seeded": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"randomint": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"randomint_seeded": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"randomstr": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"ratelimit.check_rate": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"ratelimit.check_rates": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"ratelimit.penaltybox_add": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"ratelimit.penaltybox_has": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"ratelimit.ratecounter_increment": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"regsub": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"regsuball": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"resp.tarpit": {
		Scope: types.DeliverScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"setcookie.delete_by_name": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"setcookie.get_value_by_name": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.anystr2ip": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.atof": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.atoi": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.basename": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.collect": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.count": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.dirname": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.integer2time": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.ip": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.ip2str": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.itoa": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.itoa_charset": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.prefixof": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.replace": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.replace_prefix": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.replace_suffix": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.replaceall": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.str2ip": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.strlen": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.strpad": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.strrep": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.strrev": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.strstr": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.strtof": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.strtol": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.suffixof": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.time": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.tolower": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"std.toupper": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"strftime": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"subfield": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"substr": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"table.contains": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"table.lookup": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"table.lookup_acl": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"table.lookup_backend": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"table.lookup_bool": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"table.lookup_float": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"table.lookup_integer": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"table.lookup_ip": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"table.lookup_rtime": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"time.add": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"time.hex_to_time": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"time.is_after": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"time.runits": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"time.sub": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"time.units": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"urldecode": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"urlencode": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"utf8.codepoint_count": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"utf8.is_valid": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"utf8.strpad": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"utf8.substr": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"uuid.dns": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"uuid.is_valid": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"uuid.is_version3": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"uuid.is_version4": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"uuid.is_version5": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"uuid.oid": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"uuid.url": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"uuid.version3": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"uuid.version4": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"uuid.version5": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"uuid.x500": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
	"xml_escape": {
		Scope: types.RecvScope | types.HashScope | types.HitScope | types.MissScope | types.PassScope | types.FetchScope | types.ErrorScope | types.DeliverScope | types.LogScope,
		Call:  func(ctx *context.Context, args ...variable.Value) (variable.Value, error) { return variable.Null, nil },
	},
}
